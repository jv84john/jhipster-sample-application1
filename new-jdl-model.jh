entity School{
	schoolName String required ,
    schoolID String  required ,
    schoolType String required,
    contactNumber Long,
    createdAt Instant,
    createdBy String,
    modifiedAt Instant,
    modifiedBy String  
}

entity Emirates{
	emiratesAr String  required,
    emiratesEn String required
}

entity Student{
	grade String ,
    gender String ,
	dateofBirth Instant,
    contactNumber Long,
    finalAvgGrade Integer,
    favProfession1 String ,
    favProfession2 String ,
    favProfession3 String ,
    favProfession4 String ,
    favProfession5 String ,
    coordinatorComment String ,
    profileStatus String,
    createdAt Instant,
    createdBy String,
    modifiedAt Instant,
    modifiedBy String    
}

entity Country {
	countryNameEn String required,
    countryName_Ar String  required
}

entity QuestionBank{
	questionOrder Integer required,
    questionAr String ,
    questionEn String,
}

entity Category{
	categoryTypeAr String ,
    categoryTypeEn String,
    colorType String,
}

entity Exam{
	answer String,
    createdAt Instant,
    createdBy String,
    modifiedAt Instant,
    modifiedBy String   
}


relationship OneToOne {
    School{emirate} to Emirates
}

relationship OneToOne {
	Student{school} to School
    Student{country} to Country
}

relationship ManyToOne {
    Exam{student} to Student,
    Exam{question} to QuestionBank
}



// Set pagination options
paginate * with pager

// Use Data Transfert Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
